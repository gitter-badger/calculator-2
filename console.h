#ifndef __CONSOLE_H__
#define __CONSOLE_H__

#include "parser.h"

#include <string>

namespace grammar
{
    struct SState;

    namespace console
    {
        // This functions were generated by lemon
        void *ParseAlloc(void *(*mallocProc)(size_t));
        void Parse( void *yyp, int yymajor, void* yyminor, SState*);
        void ParseFree( void *p, void (*freeProc)(void*));
    }
}

class CConsole
{
    public:
        CConsole(int arc, char** argv);
        ~CConsole() { delete m_variable; }

        int run();
        void set_command(const std::string& command) { m_command = command; }
        void set_expression(const std::string& expression) { m_expression = expression; }
        void set_variable(parser::CObjectTreeNode* var);

    private:
        enum EMode
        {
            EM_EXPRESSIONS,
            EM_WHERE
        };

        parser::CParser m_parser;
        EMode m_mode;
        bool m_interactive;
        bool m_do_exit;
        std::string m_command;
        std::string m_expression;
        parser::CObjectTreeNode* m_variable;

        void prepare_variables();
        bool parse_command(const std::string& cmd);
        void handle_command();
        bool get_line(std::string& result);
        void usage(const char* cmd);
};

inline void CConsole::set_variable(parser::CObjectTreeNode* var)
{
    if (m_variable)
    {
        delete m_variable;
    }
    m_variable = var;
}

#endif // __CONSOLE_H__
